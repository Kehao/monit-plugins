#!/usr/bin/env python

"""
check_ping 
"""
import os, re, sys, getopt

def run(args):
    timeout_opt = "-W 2"
    if 'darwin' in sys.platform:
      timeout_opt = "-t " + args['timeout']
    cmd = " ".join(["ping", #-i 0.25
        "-c", args['packets'], 
        timeout_opt,
        args['host']])
    pipe = os.popen(cmd)
    output = pipe.read()
    pipe.close
    match1 = re.search(r'\s+(\d+%) packet loss', output)
    match2 = re.search(r'\s+([0-9]+.[0-9]+)/([0-9]+.[0-9]+)/([0-9]+.[0-9]+)/([0-9]+.[0-9]+) ms', output)
    #pl: packet loss
    pl = match1.group(1) 
    if pl == '100%': 
      summary = 'Packet loss = ' + pl
      print "CRITICAL -", summary
    else:
      data = {'pl': pl}
      data['rtmin'] = match2.group(1) + 'ms'
      data['rta'] = match2.group(2) + 'ms'
      data['rtmax'] = match2.group(3) + 'ms'
      summary = 'Packet loss = ' + pl + ", RTA = " + data['rta']
      metrics = ",".join([name + "=" + val for name, val in data.iteritems()])
      if pl == '0%':
        print "OK -", summary, "|", metrics
      else:
        print "WARNING -", summary, "|", metrics

def usage():
    print "Usage: check_ping -h --host=host --packets=packets --timeout=timeout "

if __name__ == "__main__":
    try:
        opts, args = getopt.getopt(sys.argv[1:], "h", ["help", "host=", "packets=", "timeout="])
    except getopt.GetoptError, err:
    # print help information and exit:
        print "UNKNOWN -", str(err)
        sys.exit(2)
    cmd_args = {'packets': '4', 'timeout': '6'} 
    for o, a in opts:
      if o in ("-h", "--help"):
        usage(),
        sys.exit(0)
      elif o in ("--host"):
        cmd_args['host'] = a
      elif o in ("--packets"):
        cmd_args['packets'] = a
      elif o in ("--timeout"):
        cmd_args['timeout'] = a
      else:
        print "UNKNOWN - error argument:" + o
        usage()
        sys.exit(2)
    if not ('host' in cmd_args):
      print "UNKNOWN - invalid arguments"
      usage()
      sys.exit(2)
    try:
      run(cmd_args)
    except:
      print "UNKNOWN -", sys.exc_info()[0]
      sys.exit(2)

