#!/usr/bin/env python

"""
check_mem_free by free -o
"""
import os, re, sys, getopt

def run(Args):
    pipe = os.popen("free -o")
    output = pipe.read()
    pipe.close
    if output.strip() == "":
      print "UNKNOWN - unsupported command" 
      return
    lines = output.split("\n")
    headers = re.split(r"\s+", lines[0].strip(" "))
    meminfo = re.split(r"\s+", lines[1].strip("Mem: "))
    mem = {}
    for i in range(6):
        mem[headers[i]] = int(meminfo[i]) * 1024
    mem['usage'] = str(mem['used'] / mem['total']) + '%'
    summary = "memory usage = " + mem['usage']
    metrics = ", ".join([name + "=" + str(val) for name, val in mem.iteritems()])
    print "OK -", summary, "|", metrics

def usage():
    print "Usage: check_mem_free -h"

if __name__ == "__main__":
    try:
        opts, args = getopt.getopt(sys.argv[1:], "h", ["help"])
    except getopt.GetoptError, err:
    # print help information and exit:
        print "UNKNOWN -", str(err)
        sys.exit(2)
    url = None
    for o, a in opts:
        if o in ("-h", "--help"):
            usage(),
            sys.exit(0)
        else:
            print "UNKNOWN - error argument:" + o
            usage()
            sys.exit(2)
    try:
        run({})
    except:
        print "UNKNOWN -", sys.exc_info()[0]
        sys.exit(2)
