#!/usr/bin/env python

"""
check_ping 
"""
import os, re, sys, getopt

def run(args):
    pipe = os.popen("df " + args['path'])
    output = pipe.read()
    pipe.close
    lines = output.split("\n")
    #remove head
    lines.pop(0)
    diskinfo = " ".join(lines)
    tokens = re.split(r'\s+', diskinfo)
    data = {}
    fs = tokens[0]
    data['total'] = tokens[1]
    data['used'] = tokens[2]
    data['avail'] = tokens[3]
    data['usage'] = tokens[4]
    mount = tokens[5]
    summary = "Disk '" + mount + "' usage = " + data['usage']
    metrics = ",".join([name + "=" + val for name, val in data.iteritems()])
    print "OK -", summary, "|", metrics

def usage():
    print "usage:  check_disk_df -h --path=path" 

if __name__ == "__main__":
    try:
        opts, args = getopt.getopt(sys.argv[1:], "h", ["help", "path="])
    except getopt.GetoptError, err:
    # print help information and exit:
        print "UNKNOWN -", str(err)
        sys.exit(2)
    cmd_args = {}
    for o, a in opts:
      if o in ("-h", "--help"):
        usage(),
        sys.exit(0)
      elif o in ("--path"):
        cmd_args['path'] = a
      else:
        print "UNKNOWN - error argument:" + o
        usage()
        sys.exit(2)
    if not ('path' in cmd_args):
      print "UNKNOWN - invalid arguments"
      usage()
      sys.exit(2)
    try:
      run(cmd_args)
    except:
      print "UNKNOWN -", sys.exc_info()[0]
      sys.exit(2)

